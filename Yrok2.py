# n=int(input('Введите число'))
# result=1
# while n>1:
#     result*=n
#     n-=1
#     return result
# Чи́сла Фибона́ччи (вариант написания — Фибона́чи[2]) — элементы числовой последовательности

# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, … (последовательность A000045 в OEIS),
# в которой первые два числа равны 0 и 1, а каждое последующее число равно сумме двух предыдущих чисел[3]. Названы в честь средневекового математика Леонардо Пизанского (известного как Фибоначчи)[4].

# Правда, в некоторых книгах, особенно в старых[каких?], член {\displaystyle F_{0}}F_{0}, равный нулю, опускается — тогда последовательность Фибоначчи начинается с {\displaystyle F_{1}=F_{2}=1}{\displaystyle F_{1}=F_{2}=1}[5][6].

# Говоря более формально, последовательность чисел Фибоначчи {\displaystyle \{F_{n}\}}{\displaystyle \{F_{n}\}} задаётся линейным рекуррентным соотношением:

# def fibonache(n):
# # 0, 1, 1, 2, 3, 5,
# if n==0:
#     return 1
# if n==1:
#     return 2
# number0=0
# number1=1
# count = 2
# while n>=number1:
#     if n== number1:
#         return count
#         temp=number1
#         number1+=number0
#         number0=temp
#         count+=1
#     return -1

    

# n=int(input('Введите число:'))
# print(factorial(n))

# Задача №13
# Уставшие от необычно теплой зимы, жители решили узнать, действительно ли это самая длинная оттепель за всю историю наблюдений за погодой. 
# Они обратились к синоптикам, а те, в свою очередь, занялись исследованиями статистики за прошлые годы. Их интересует, сколько дней длилась 
# самая длинная оттепель.
#  Оттепелью они называют период, в который среднесуточная
#  температура ежедневно превышала 0 градусов Цельсия. Напишите программу, помогающую синоптикам в работе.
# Пользователь вводит число N – общее количество рассматриваемых дней (1 ≤ N ≤ 100). 
# В следующих строках располагается N целых чисел. 
# Каждое число – среднесуточная температура в соответствующий день. Температуры – целые числа и лежат в диапазоне от –50 до 50

# Input:    6 -> -20 30 -40 50 10 -10
# # Output: 2
# from random import randint
# n = int(input('Введите число'))
# l = [randint(-50, 50) for i in range(1, n)]
# count = 0
# maxcount = 0
# m = []
# for el in l:
#     if el >= 0:
#         count += 1
#         m.append(count)
#     else:
#         if count > maxcount:
#             maxcount = count
#         count = 0

# print(l)
# print(maxcount)


# def sinoptik(N):
#     days=[]
#     for _ in range(N):
#         days.append(round(random.uniform(-10,50),0))  
#     print(days)
#     maxPeriod = maxPeriodResult = 0
#     i = 0
#     while i<N-1:
#         if days[i]>0:
#             while days[i]>0 and i<N-1:
#                 maxPeriod+=1
#                 i+=1
#             if maxPeriodResult<maxPeriod: maxPeriodResult=maxPeriod
#         maxPeriod=0
#         i+=1
#     return maxPeriodResult


# Иван Васильевич пришел на рынок
#  и решил купить два арбуза: один для себя, а другой для тещи. 
#  Понятно, что для себя нужно выбрать арбуз потяжелей,
#  а для тещи полегче. 
#  Но вот незадача: арбузов слишком много и он не знает как же выбрать самый легкий и самый тяжелый арбуз? 
#  Помогите ему!
# Пользователь вводит одно число N – количество арбузов. Вторая строка содержит N чисел,
#  записанных на новой строчке каждое. Здесь каждое число – это масса соответствующего арбуза. 
#  Все числа натуральные и не превышают 30000.

# def arbuzLine(N):
#     arbuzes=[]
#     for _ in range(N):
#         arbuzes.append(random.randint(5000,30000))
#     arbuzes.sort()
#     print(arbuzes)
    
#     # min=max=arbuzes[0]
#     # for item in arbuzes:
#     #     if min>item: min = item
#     #     elif max < item: max = item
    
#     # return min, max       
    
#     return arbuzes[0],arbuzes[-1]
